/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package detodosa;


import java.util.ArrayList;
import java.util.TreeSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Facundo รง
 */
public class BusquedaPorRubro extends javax.swing.JInternalFrame {

    /**
     * Creates new form BusquedaPorRubro
     */
    private CategoriaData cd;
    private ProductoData pd;
    private DefaultTableModel modelo;
    private Producto productoElegido;
    
    public BusquedaPorRubro() {
        initComponents();
        modelo=new DefaultTableModel();
        cd=new CategoriaData();
        pd = new ProductoData();
        llenarCombos();
        ArmarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCcategorias = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTProductos = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Listado por Rubro");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Rubro:");

        jCcategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCcategoriasActionPerformed(evt);
            }
        });

        jTProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTProductosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jCcategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCcategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCcategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCcategoriasActionPerformed
        LlenarTabla();
    }//GEN-LAST:event_jCcategoriasActionPerformed

    private void jTProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTProductosMouseClicked
       
        int filaElegida=jTProductos.getSelectedRow();
        
        if(filaElegida!=-1){
                int idProducto=(Integer)jTProductos.getValueAt(filaElegida, 0);
                int codigo=(Integer)jTProductos.getValueAt(filaElegida, 1);
                String descripcion=(String)jTProductos.getValueAt(filaElegida, 2);
                double precio=(Double)jTProductos.getValueAt(filaElegida,3);
                Categoria catTabla=(Categoria)jTProductos.getValueAt(filaElegida, 4);
                int stock=(Integer)jTProductos.getValueAt(filaElegida, 5);
                
              
                
              
                productoElegido=new Producto();
                productoElegido.setIdProducto(idProducto);
                productoElegido.setCodigo(codigo);
                productoElegido.setDescripcion(descripcion);
                productoElegido.setPrecio(precio);
                productoElegido.setCategoria(catTabla);
                productoElegido.setStock(stock);
        }
    }//GEN-LAST:event_jTProductosMouseClicked

   private void llenarCombos(){
       
        for(Categoria c:cd.obtenerCategorias()){
        
            jCcategorias.addItem(c);
           
            
        }
    } 
   private void ArmarCabecera(){
  ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("ID");
        columnas.add("Codigo");
        columnas.add("Descripcion");
        columnas.add("Precio");
        columnas.add("Categoria");
        columnas.add("Stock");
        
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        jTProductos.setModel(modelo);
  }
    private void LlenarTabla(){
         BorrarFilas();    
         Categoria elegida=(Categoria)jCcategorias.getSelectedItem();
        
        if(elegida!=null){
        
            for(Producto p:pd.obtenerProductos()){
            
                if(p.getCategoria().equals(elegida)){
                
                    modelo.addRow(new Object[]{p.getIdProducto(),p.getCodigo(),p.getDescripcion(),p.getPrecio(),p.getCategoria(),p.getStock()});
                }
            }
        }
  }
   private void BorrarFilas(){
         int a = modelo.getRowCount()-1;

                for(int i=a;i>=0;i--){
   
                    modelo.removeRow(i );
            }
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Categoria> jCcategorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTProductos;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
